{"version":3,"file":"main.js","mappings":"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","sources":["webpack://image-manager/./src/js/ImageWidget.js","webpack://image-manager/./src/js/ImagesContainer.js","webpack://image-manager/./src/js/app.js","webpack://image-manager/./src/index.js"],"sourcesContent":["export default class ImageWidget {\n  constructor(container, createImg) {\n    if (typeof container === 'string') {\n      this.container = document.querySelector(container);\n    }\n\n    this.createImg = createImg;\n\n    this.imageWidgetForm = this.container.querySelector('.image-widget__form');\n    this.imageWidgetBtn = this.container.querySelector('.image-widget__btn');\n    this.inputLink = this.container.querySelector('.field__input-link');\n    this.inputName = this.container.querySelector('.field__input-name');\n\n    this.addImage = this.addImage.bind(this);\n    this.hideErrorText = this.hideErrorText.bind(this);\n    this.deleteRedBorder = this.deleteRedBorder.bind(this);\n\n    this.addEvents();\n  }\n\n  // Добавляем прослушиватели событий\n  addEvents() {\n    this.imageWidgetForm.addEventListener('submit', this.addImage);\n    this.imageWidgetBtn.addEventListener('click', this.addImage);\n    this.inputLink.addEventListener('input', this.hideErrorText);\n    this.inputName.addEventListener('input', this.deleteRedBorder);\n  }\n\n  // Добавляем изображение по ссылке, указанной пользователем\n  addImage(e) {\n    e.preventDefault();\n\n    const imgName = this.inputName.value;\n\n    if (!imgName.trim()) {\n      this.inputName.classList.add('field__input-name_red');\n      return;\n    }\n\n    const imgLink = this.inputLink.value;\n\n    const data = {\n      name: imgName,\n      link: imgLink,\n    };\n\n    const fieldLink = this.container.querySelector('.field__block-link');\n    this.createImg(data, fieldLink);\n    this.imageWidgetForm.reset();\n  }\n\n  // Удаляем сообщение об ошибке при вводе текста\n  hideErrorText() {\n    this.errorText = this.container.querySelector('.field__error-text');\n    if (!this.errorText) return;\n    this.errorText.remove();\n  }\n\n  // Удаляем красную обводку инпута\n  deleteRedBorder() {\n    const isRedInput = this.inputName.classList.contains('field__input-name_red');\n    if (isRedInput) {\n      this.inputName.classList.remove('field__input-name_red');\n    }\n  }\n}\n","export default class ImagesContainer {\n  constructor(container) {\n    if (typeof container === 'string') {\n      this.container = document.querySelector(container);\n    }\n\n    this.addImage = this.addImage.bind(this);\n    this.deleteImg = this.deleteImg.bind(this);\n    this.showError = this.showError.bind(this);\n\n    this.container.addEventListener('click', this.deleteImg);\n  }\n\n  // Удаляем изображение\n  deleteImg(e) {\n    const { target } = e;\n    const imgDelete = target.closest('.item__delete');\n\n    if (!imgDelete) return;\n\n    const imgEl = imgDelete.closest('.item');\n    imgEl.remove();\n  }\n\n  // Создаем элемент картинки\n  renderImgElement({ name, link }) {\n    const imgEl = document.createElement('div');\n    imgEl.classList.add('images__item', 'item');\n    imgEl.innerHTML = `\n      <div class=\"item__img\">\n        <img src=${link} alt=${name} class=\"item__img-picture\">\n      </div>\n      <div class=\"item__delete\">\n        <img src=\"./images/cross.jpg\" alt=\"cross-icon\" class=\"item__cross\">\n      </div>\n    `;\n\n    return imgEl;\n  }\n\n  // Добавляем картинку\n  addImage(data, field) {\n    this.fieldLink = field;\n    const imgElement = this.renderImgElement(data);\n    const img = imgElement.querySelector('.item__img-picture');\n\n    img.addEventListener('load', () => {\n      this.container.append(imgElement);\n    });\n    img.addEventListener('error', this.showError);\n  }\n\n  // Если невозможно подгрузить картинку, показываем сообщение об ошибке\n  showError() {\n    this.errorText = document.createElement('p');\n    this.errorText.classList.add('field__error-text');\n    this.errorText.textContent = 'Неверный URL изображения';\n    this.fieldLink.append(this.errorText);\n  }\n}\n","import ImageWidget from './ImageWidget';\nimport ImagesContainer from './ImagesContainer';\n\nconst imagesContainer = new ImagesContainer('.images__container');\nconst imageWidget = new ImageWidget('.image-widget', imagesContainer.addImage);\nconsole.log(imageWidget);\n","import './css/app.css';\nimport './js/app';\n"],"names":["ImageWidget","constructor","container","createImg","document","querySelector","imageWidgetForm","imageWidgetBtn","inputLink","inputName","addImage","bind","hideErrorText","deleteRedBorder","addEvents","addEventListener","e","preventDefault","imgName","value","trim","classList","add","imgLink","data","name","link","fieldLink","reset","errorText","remove","isRedInput","contains","ImagesContainer","deleteImg","showError","target","imgDelete","closest","imgEl","renderImgElement","_ref","createElement","innerHTML","field","imgElement","img","append","textContent","imagesContainer","imageWidget","console","log"],"sourceRoot":""}